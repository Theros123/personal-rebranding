// Project Mixins

// Mixins for media queries

// Case 1 - Default scenarios
@mixin responsive() {
    @media #{$small-only} {
      min-height: inherit;
    }
    @media #{$xlarge-up} {
      height: 768px;
  }
}

// Mixins for section layout

@mixin hero-image-content($column1: 7, $column2: 5) {
  img {
    @include grid-column($column1);

    @media #{$small-only} {
      width: 100%
    }
  }
  .text {
    @include grid-column($column2);

    @media #{$small-only} {
      width: 100%;
    }
  }
}

// Mixin to control section background and color tint
@mixin background($filename: none, $repeat: no-repeat, $bgsize: cover, $bgcolor: none, $bgattachment: scroll) {
    background: transparent url(#{$filename}) $repeat;
    background-size: $bgsize;
    background-attachment: $bgattachment;

  .tint-wrapper {
    height: 100%;
    // Make this variable
    background-color:$bgcolor;
  }
}

// Mixin for calc function
@mixin calc($property, $expression) {
  // Default fallback value
  #{$property}: 100%;
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

// Mixin for multi column support
@mixin columns($number) {
  column-count:$number;
  -moz-column-count:$number; /* Firefox */
  -webkit-column-count:$number; /* Safari and Chrome */
}

// Mixins for Font Awesome Rotation
@mixin fa-icon-rotate($degrees, $rotation) {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});
  -webkit-transform: rotate($degrees);
     -moz-transform: rotate($degrees);
      -ms-transform: rotate($degrees);
       -o-transform: rotate($degrees);
          transform: rotate($degrees);
}

@mixin fa-icon-flip($horiz, $vert, $rotation) {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});
  -webkit-transform: scale($horiz, $vert);
     -moz-transform: scale($horiz, $vert);
      -ms-transform: scale($horiz, $vert);
       -o-transform: scale($horiz, $vert);
          transform: scale($horiz, $vert);
}